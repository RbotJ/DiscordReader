You’re working on the “alert system” feature slice of our A+ Trades bot. We’ve just removed all channel IDs from Replit secrets except for DISCORD_BOT_TOKEN, and now need to:

1. **Discover & cache channels on startup**  
   - In `on_ready()`, iterate over `bot.guilds` → `guild.text_channels` and build a `bot.text_channels: dict[str,int]` mapping channel name → ID.  
   - Print or log that mapping once, so we know what channels we can use.

2. **Load alert-channel config from disk**  
   - Create a lightweight JSON file at `config/alert_channels.json` (ensure `config/` exists).  
   - On startup, read that JSON into a `dict[str,int]` called `alert_config`. If it doesn’t exist, initialize an empty dict.

3. **Slash-command to set channels**  
   - Implement a `/set_alert_channel` slash-command with two arguments:  
     • `alert_type: str` (e.g. “breakout_alert”)  
     • `channel: discord.TextChannel`  
   - When invoked by an admin, update `alert_config[alert_type] = channel.id`, write the JSON file back to disk, and respond with a confirmation:  
     > “✅ alert_type ‘breakout_alert’ will now post in #channel_name.”

4. **Use the config when sending alerts**  
   - Replace any hard-coded or env-var channel lookups in `send_alert(...)` or similar with:  
     ```python
     chan_id = alert_config.get(alert_type)
     if not chan_id:
         raise RuntimeError(f"No channel set for alert_type {alert_type}")
     channel = bot.get_channel(chan_id)
     await channel.send(message)
     ```
   - Make sure `alert_config` is kept in memory and updated after writes, so new commands take effect immediately.

5. **Clean up**  
   - Remove any references to channel IDs in `.secrets` or environment variables.  
   - Add `config/alert_channels.json` to `.gitignore` so you don’t accidentally commit sensitive mappings.

Please implement all of the above in our codebase, ensuring:

- The bot still requires only `DISCORD_BOT_TOKEN` from Replit secrets.  
- The new JSON file is created and updated at runtime.  
- Permission checks: only users with a “manage_guild” or custom “Admin” role may run `/set_alert_channel`.  
- Proper error handling and logging for missing or invalid channels.  
- A one-time migration comment in `on_ready()` that, if `alert_channels.json` is empty, logs:  
  > “ℹ️ No alert channels yet — use `/set_alert_channel` to configure.”  

Thank you! ```

This prompt tells Replit exactly what to build: channel discovery, JSON-backed config, slash-command management, and removal of env-stored IDs.
