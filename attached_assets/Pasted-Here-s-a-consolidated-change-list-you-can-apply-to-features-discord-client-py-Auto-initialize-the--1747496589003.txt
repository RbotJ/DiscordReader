Here’s a consolidated change list you can apply to features/discord/client.py:

Auto-initialize the bot

Ensure initialize_discord_client() is invoked at startup (either by importing at module bottom or from your app’s bootstrap) so you never forget to kick off the thread.

Robust channel lookups in send_message

py
Copy
Edit
chan = discord_client.get_channel(channel_id) \
       or await discord_client.fetch_channel(channel_id)
Fallback on fetch_channel() if the channel isn’t in cache.

Parameterize your poll interval

py
Copy
Edit
POLL_INTERVAL = int(os.getenv("SETUP_POLL_INTERVAL", 5))
@tasks.loop(minutes=POLL_INTERVAL)
So you can tune it without code changes.

Expose a “since” argument in get_channel_messages

Let callers pass a since: datetime (defaults to your last‐checked timestamp) into the history query to avoid re‐reading the same messages.

Graceful shutdown hook

py
Copy
Edit
def shutdown_discord_client():
    if discord_client and client_ready:
        fut = asyncio.run_coroutine_threadsafe(discord_client.close(),
                                               discord_client.loop)
        fut.result(timeout=5)
Tie this into your app’s teardown so sockets close cleanly.

Centralize formatting of bot posts
Replace all of:

py
Copy
Edit
def send_status_update(msg): …
def send_trade_alert(sym, typ, det): …
def send_error_notification(err, det): …
with a single helper, e.g.:

py
Copy
Edit
def _fmt_send(prefix: str, content: str):
    return send_bot_message(f"**{prefix}** {content}")
Add type hints

Mark signatures explicitly, e.g.

py
Copy
Edit
def send_message(channel_id: int, message: str) -> bool: …
def get_channel_messages(since: Optional[datetime] = None) -> List[Dict[str, Any]]: …
Unit-test your send/fetch helpers

Mock a minimal discord_client (with loop, get_channel/fetch_channel stubs)

Verify send_message schedules correctly, and that get_channel_messages extracts text vs. embeds as expected.

With those in place you’ll have a more resilient, configurable Discord client and foolproof shutdown/bootstrapping.