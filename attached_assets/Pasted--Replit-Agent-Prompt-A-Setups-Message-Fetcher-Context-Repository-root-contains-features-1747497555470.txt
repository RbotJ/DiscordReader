# Replit Agent Prompt: A+ Setups Message Fetcher

## Context
- Repository root contains `features/discord/client.py` which currently has stubbed Discord-API calls.
- Environment variables:
  - `DISCORD_BOT_TOKEN_APLUS`
  - `DISCORD_CHANNEL_APLUS_SETUPS` (ID of the “A+ Setups” channel)

## Objective
Implement a new function `fetch_and_store_setups()` in `features/discord/client.py` that:
1. Connects to Discord using the bot token.
2. Retrieves the latest N messages from the channel ID in `DISCORD_CHANNEL_APLUS_SETUPS`.
3. For *each* message, saves the raw JSON (including content, embeds, attachments, forwarded metadata) into a local file or database table.
4. Prints a summary line to console:  
[INFO] Fetched {count} messages; stored to {storage-location}

pgsql
Copy
Edit
5. Provides a small demo in `if __name__ == "__main__":` showing it works end-to-end.

## Constraints
- **DO NOT** parse or interpret the message content in any way (no regex, no signal extraction).
- **DO NOT** implement any downstream parsing, analysis, or execution logic.
- **DO NOT** modify existing parsing modules—this is a standalone slice.
- Handle ‘forwarded’ messages by including their embed or quoted content exactly as received; if content is missing, still store the message object with a flag `is_forwarded=True`.

## Acceptance Criteria
- Running `python features/discord/client.py` prints a list of raw message IDs and a storage confirmation.
- A file or table (e.g. `setups_raw.json` or `setups_raw` table) exists with one entry per message.
- Unit tests (e.g. in `tests/`) can stub the Discord API and assert that `fetch_and_store_setups()` writes exactly the messages passed in.

## Next Steps After This Slice
Once raw storage is confirmed, we will build the parsing layer on top.

---

```python
# Example entrypoint to demonstrate behavior (not full implementation)
if __name__ == "__main__":
 client = DiscordClient(token=os.getenv("DISCORD_BOT_TOKEN_APLUS"))
 messages = client.fetch_latest_messages(channel_id=int(os.getenv("DISCORD_CHANNEL_APLUS_SETUPS")), limit=50)
 store_raw_messages(messages, filename="setups_raw.json")
 print(f"[INFO] Fetched {len(messages)} messages; stored to setups_raw.json")